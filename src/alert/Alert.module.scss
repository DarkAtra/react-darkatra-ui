@import "src/utils/Breakpoint";
@import "src/utils/Size";
@import "src/utils/ThemeColor";

$alert-padding-y: .5rem;
$alert-padding-x: .25rem;
$alert-border-radius: .25rem;
$alert-prefix-gap: .25rem;
$alert-suffix-gap: .25rem;

.alert {
  display: flex;
  align-items: center;
  position: relative;
  padding: $alert-padding-y $alert-padding-x;
  border: 1px solid transparent;
  border-radius: $alert-border-radius;
  line-height: $line-height-base;

  // theme-color with css variables for each breakpoint
  @include breakpoint-aware-css-color-variables($theme-color-css-variable-name);

  // color, background-color, border-color according to the theme-color
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint);
    @include breakpoint-up($breakpoint) {
      $color: (r:var(--#{$theme-color-css-variable-name}-r#{$infix}), g:var(--#{$theme-color-css-variable-name}-g#{$infix}), b:var(--#{$theme-color-css-variable-name}-b#{$infix}), a:var(--#{$theme-color-css-variable-name}-a#{$infix}));
      $text-color: mix($color, (r:0, g:0, b:0, a:1), 48);

      color: rgba($color);
      background-color: rgba(mix($color, (r: 255, g: 255, b: 255, a: 1), 80));
      border-color: rgba(mix($color, (r: 255, g: 255, b: 255, a: 1), 72));

      a {
        color: rgba(darken($text-color, .1));
      }
    }
  }

  > .prefix {
    display: flex;
    flex-direction: column;
    margin-right: $alert-prefix-gap;
  }

  > .content {
    display: flex;
    flex-direction: column;
  }

  > .suffix {
    display: flex;
    flex-direction: column;
    margin-left: $alert-suffix-gap;
  }
}
